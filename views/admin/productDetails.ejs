<%- include('../layout/admin_header.ejs') %>
<section class="content-main">
    <div class="content-header">
        <h2 class="content-title">Product Details: </h2>
        <div>
            <a href="/admin/products" class="btn btn-outline-primary"><i class="fas fa-list"></i> Product List</a>
            <a href="/admin/products/edit-product/<%= product._id %>" class="btn btn-outline-secondary"><i class="fas fa-edit"></i> Edit Product</a>
        </div>
    </div>
    <div class="card mb-4">
        <div class="card-body">
            <div class="row">
                <!-- First Column: Main Image -->
                <div class="col-md-4">
                    <% if(product.product_images.length > 0) { %>
                        <img src="/imgs/products/<%= product.product_images[0] %>" alt="" class="img-fluid rounded">
                    <% } else { %>
                        <div class="text-center p-4 bg-secondary text-white rounded">No Image Available</div>
                    <% } %>
                    <!-- Additional Images Under the Main Image -->
                    <div class="mt-3">
                        <h5>Additional Images</h5>
                        <div class="row">
                            <% product.product_images.forEach(image => { %>
                                <div class="col-md-4 mb-3">
                                    <div class="card">
                                        <img src="/imgs/products/<%= image %>" class="card-img-top" alt="Product Image">
                                    </div>
                                </div>
                            <% }) %>
                        </div>
                    </div>
                </div>

                <!-- Second Column: Product Details -->
                <div class="col-md-8">
                    <h3><%= product.product_name %></h3>
                    <p><strong>Brand: <%= product.product_brand %></strong></p>
                    <p><strong>Category: <%= product.product_category.name %></strong></p>
                    <p><strong>Stock:</strong> <%= product.product_quantity %></p>
                    <p><strong>Regular Price:</strong> ₹ <%= product.product_regular_price %></p>
                    <p><strong>Sale Price:</strong> ₹ <%= product.product_sale_price %></p>
                    <p><strong>Offer Price:</strong> ₹ <span id="offerPrice"><%= product.offerPrice || 0.0 %></span></p>
                    <% if(product.offerPrice) {%>
                        <p>Remove offers : <button class="btn btn-sm btn-danger" onclick="removeallOffer()">Remove</button></span></p>
                    <% } %>
                    <p><strong>Status:</strong>
                        <% if(product.isActive) { %>
                            <span class="badge bg-success">Active</span>
                        <% } else { %>
                            <span class="badge bg-danger">Inactive</span>
                        <% } %>
                    </p>
                    <h4 class="mt-4">Description</h4>
                    <p><%= product.product_description %></p>
                </div>
            </div>
        </div>
    </div>

    <!-- Offers Section -->
    <div class="card mb-4">
        <div class="card-body">
            <h4 class="mt-4">Product Offers</h4>
            <% if (product.offer) { %>
                <div class="offer-details mb-3">
                    <p><strong>Offer Name:</strong> <%= product.offer.name %></p>
                    <p><strong>Discount Percentage:</strong> <%= product.offer.discountPercentage %>%</p>
                    <p><strong>Start Date:</strong> <%= product.offer.startDate.toDateString() %></p>
                    <p><strong>Expiry Date:</strong> <%= product.offer.expiryDate.toDateString() %></p>
                    <p><strong>Description:</strong> <%= product.offer.description || 'No description available' %></p>
                    <a class="btn btn-sm btn-primary mb-3" href="/admin/products/editProductOfferPage/<%= product._id %>">Edit Offer</a>
                    <button type="button" id="removeOfferBtn" class="btn btn-danger btn-sm mb-2">Remove Offer</button>
                    <button type="button" id="toggleStatusBtn" class="btn btn-sm <% if (product.offer.status) { %>btn-warning<% } else { %>btn-success<% } %> mb-2">
                        <% if (product.offer.status) { %>Deactivate Offer<% } else { %>Activate Offer<% } %>
                    </button>
                    <br><br>
                    <% if(product.offerPrice == (product.product_sale_price - Math.ceil(product.product_sale_price * product.offer.discountPercentage/100))) {%>
                    <button class="btn btn-primary" id="chooseProductOffer" disabled>Product Offer Selected</button>
                    <% } %>
                    <% if(product.offerPrice == (product.product_sale_price - Math.ceil(product.product_sale_price * product.product_category.offer?.discountPercentage/100))) {%>
                        <button type="button" onclick="handleOfferSelection('<%= product.product_category?.offer?.discountPercentage %>','product')" class="btn btn-sm btn-primary selectOfferBtn"  data-offer-price="<%= product.offer.discountPercentage %>" data-offer-type="product">Select Product offer</button>
                    <% } %>
                </div>
            <% } else { %>
                <a href="/admin/products/addProductOfferPage/<%= product._id %>" class="btn btn-primary">Add Product</a>
                <p>No product offers available.</p>
            <% } %>

            <h4 class="mt-4">Category Offers <a href="/admin/category/details/<%= product.product_category._id %>"><i class="bi bi-box-arrow-up-right"></i></a></h4>
            <% if (product.product_category.offer) { %>
                <div class="category-offer-details mb-3">
                    <p><strong>Offer Name:</strong> <%= product.product_category.offer.name %></p>
                    <p><strong>Discount Percentage:</strong> <%= product.product_category.offer.discountPercentage %>%</p>
                    <p><strong>Start Date:</strong> <%= product.product_category.offer.startDate.toDateString() %></p>
                    <p><strong>Expiry Date:</strong> <%= product.product_category.offer.expiryDate.toDateString() %></p>
                    <p ><strong>Status:</strong> <%= product.product_category.offer.status ? 'Active' : 'Inactive' %></p>
                    <% if(product.offerPrice == (product.product_sale_price - Math.ceil(product.product_sale_price * product.product_category.offer.discountPercentage/100))) {%>
                        <button class="btn btn-primary" id="chooseCategoryOffer" disabled>Category Offer Selected</button>
                        <% } %>
                        <% if(product.offerType == 'product' || product.offerType == 
                            'none') {%>
                            <button type="button" onclick="handleOfferSelection('<%= product.product_category?.offer?.discountPercentage %>','category')"  class="btn btn-sm btn-primary selectOfferBtn"  data-offer-price="<%= product.product_category.offer.discountPercentage %>" data-offer-type="category">Select category offer</button>
                        <% } %>
                </div>
            <% } else { %>
                <p>No category offers available.</p>
            <% } %>
        </div>
    </div>
</section>

<script>
    
    
    async function removeallOffer() {
        const productId = '<%= product._id %>';  // Extract product ID
    
        try {
            // Show confirmation dialog
            const result = await Swal.fire({
                title: 'Are you sure?',
                text: "This action will remove all offers for this product!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, remove all offers!'
            });
    
            if (result.isConfirmed) {
                
                const response = await fetch(`/admin/products/removeAllOffers/${productId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
    
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
    
                const data = await response.json();
    
                if (data.success) {
                  
                    await Swal.fire(
                        'Removed!',
                        'All offers have been removed.',
                        'success'
                    );
                    location.reload();
                } else {
                    
                    await Swal.fire(
                        'Error!',
                        'Failed to remove all offers. Please try again.',
                        'error'
                    );
                }
            }
        } catch (error) {
            console.error('Fetch error:', error);
            await Swal.fire(
                'Error!',
                `Something went wrong. ${error.message}`,
                'error'
            );
        }
    }
    

async function handleOfferSelection(offerPercentage, offerType ) {
    try {
        const productId = '<%= product._id %>';
        const result = await Swal.fire({
            title: 'Are you sure?',
            text: `Do you want to select this ${offerType} offer with ${offerPercentage}% discount?`,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, select it!'
        });

        if (result.isConfirmed) {
            const response = await fetch(`/admin/products/updateOfferPrice/${productId}`, {
                method: 'PATCH',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ offerPercentage: offerPercentage, offerType: offerType })
            });

            if (!response.ok) {
                throw new Error('Network response was not ok');
            }

            const data = await response.json();

            if (data.success) {
                await Swal.fire(
                    'Selected!',
                    `The ${offerType} offer has been selected.`,
                    'success'
                );

                location.reload();
            } else {
                await Swal.fire(
                    'Error!',
                    'Failed to select the offer. Please try again.',
                    'error'
                );
            }
        }
    } catch (error) {
        console.error('Fetch error:', error);
        await Swal.fire(
            'Error!',
            `Something went wrong. ${error}`,
            'error'
        );
    }
}

// Remove Offer Button
document.getElementById('removeOfferBtn').addEventListener('click', async function() {
    const productId = '<%= product._id %>';
    const url = `/admin/products/removeProductOffer/${productId}`;

    try {
        const result = await Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, remove it!'
        });

        if (result.isConfirmed) {
            const response = await fetch(url, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            const data = await response.json();

            if (data.success) {
                await Swal.fire(
                    'Removed!',
                    'The offer has been removed.',
                    'success'
                );
                window.location.href = `/admin/products/productdetail/${productId}`;
            } else {
                console.error('Remove offer error:', data);
                await Swal.fire(
                    'Error!',
                    'Failed to remove the offer. Please try again.',
                    'error'
                );
            }
        }
    } catch (error) {
        console.error('Fetch error:', error);
        await Swal.fire(
            'Error!',
            'Something went wrong. Please check the console for details.',
            'error'
        );
    }
});

// Toggle Offer Status Button
document.getElementById('toggleStatusBtn').addEventListener('click', async function() {
    const isActive = <% if (product.offer?.status) { %>true<% } else { %>false<% } %>;
    const action = isActive ? 'deactivate' : 'activate';
    const newStatus = !isActive;

    try {
        const result = await Swal.fire({
            title: 'Are you sure?',
            text: `You want to ${action} this offer!`,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: `Yes, ${action} it!`
        });

        if (result.isConfirmed) {
            const response = await fetch(`/admin/products/changeOfferStatus/<%= product._id %>`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ status: newStatus })
            });

            if (!response.ok) {
                throw new Error('Network response was not ok');
            }

            const data = await response.json();

            if (data.success) {
                await Swal.fire(
                    `${action.charAt(0).toUpperCase() + action.slice(1)}d!`,
                    `The offer has been ${action}d.`,
                    'success'
                );
                location.reload();
            } else {
                await Swal.fire(
                    'Error!',
                    'Something went wrong.',
                    'error'
                );
            }
        }
    } catch (error) {
        console.error('Fetch error:', error);
        await Swal.fire(
            'Error!',
            `Something went wrong. ${error}`,
            'error'
        );
    }
});


</script>

<%- include('../layout/admin_footer.ejs') %>
